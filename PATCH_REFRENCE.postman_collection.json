{
	"info": {
		"_postman_id": "3ddb7c49-96fc-41e0-af59-a5590581e3f9",
		"name": "PATCH_REFRENCE",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27083084"
	},
	"item": [
		{
			"name": "sub_marks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Your subject\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.subject).to.eql(\"maths\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Your marks\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.marks).to.eql(\"90\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"subject\" : \"maths\",\r\n\"marks\" : \"90\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://reqres.in/api/users/3"
			},
			"response": []
		},
		{
			"name": "details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\" , function() {\r",
							"pm.response.to.have.status(200);    \r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"\r",
							"var date = new Date().toISOString().slice(0,13);\r",
							"console.log(date);\r",
							"\r",
							"\r",
							"var res_name = responseBody.name;\r",
							"var res_surname = responseBody.surname;\r",
							"var res_age  = responseBody.age;\r",
							"var res_place = responseBody.place;\r",
							"var res_updatedAt = responseBody.updatedAt;\r",
							"res_updatedAt = res_updatedAt.slice(0,13);\r",
							"\r",
							"pm.test(\"Validate NAME\" , function() {\r",
							"pm.expect(res_name).to.eql(\"Nishant\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate SURNAME\" , function() {\r",
							"pm.expect(res_surname).to.eql(\"Gupta\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate AGE\" , function() {\r",
							"pm.expect(res_age).to.eql(29);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate PLACE\" , function() {\r",
							"pm.expect(res_place).to.eql(\"Jaipur\");\r",
							"});\r",
							"\r",
							"pm.test(\"validate DATE\",function() {\r",
							"pm.expect(res_updatedAt).to.eql(date);    \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n\"name\": \"Nishant\",\r\n\"surname\" : \"Gupta\",\r\n\"age\" : 29,\r\n\"place\" : \"Jaipur\"\r\n    }\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://reqres.in/api/users/2"
			},
			"response": []
		},
		{
			"name": "dynamic",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\" , function() {\r",
							"pm.response.to.have.status(200);    \r",
							"});\r",
							"\r",
							"var requestBody = pm.request.body.raw;\r",
							"requestBody = JSON.parse(requestBody);\r",
							"\r",
							"var req_name = requestBody.name;\r",
							"var req_job = requestBody.job;\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"\r",
							"var date = new Date().toISOString().slice(1,1);\r",
							"console.log(date);\r",
							"\r",
							"var res_name = responseBody.name;\r",
							"var res_job = responseBody.job;\r",
							"var res_updatedAt = responseBody.updatedAt;\r",
							"res_updatedAt = res_updatedAt.slice(1,1);\r",
							"\r",
							"pm.test(\"Validate NAME\" , function() {\r",
							"pm.expect(res_name).to.eql(req_name);    \r",
							"});\r",
							"\r",
							"pm.test(\"Validate JOB\" , function() {\r",
							"pm.expect(res_job).to.eql(req_job);    \r",
							"});\r",
							"\r",
							"pm.test(\"validate DATE\",function() {\r",
							"pm.expect(res_updatedAt).to.eql(date);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var name = pm.variables.replaceIn('{{$randomFullName}}');\r",
							"pm.collectionVariables.set(\"coll_name\" , name);\r",
							"\r",
							"var job = pm.variables.replaceIn('{{$randomJobTitle}}');\r",
							"pm.collectionVariables.set(\"coll_job\",job);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"{{coll_name}}\",\r\n\"job\" :  \"{{coll_job}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://reqres.in/api/users/2"
			},
			"response": [
				{
					"name": "PATCH REQUEST CODE",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"{{coll_name}}\",\r\n\"job\" :  \"{{coll_job}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://reqres.in/api/users/2"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 19 Jun 2023 18:04:54 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"5c-uuoViTuU8eCufc+fw4NF8njOSEc\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=GgorWfuguyxsahBnVjDLj0TJ0dn2a%2FpCdOScpxXACwFCMDUYb8SFdBN%2B%2BWIYc4kG8EJwqQ7PgOp4qbri9ij0w8cgv13Ny4ilGgdqlxK%2B16YQqCPh62A5fHYHdw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "7d9db2796ff67950-AMD"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Neil Olson\",\n    \"job\": \"Future Branding Planner\",\n    \"updatedAt\": \"2023-06-19T18:04:54.875Z\"\n}"
				}
			]
		},
		{
			"name": "update_details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\" , function() {\r",
							"pm.response.to.have.status(200);    \r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"\r",
							"var date = new Date().toISOString().slice(0,13);\r",
							"console.log(date);\r",
							"\r",
							"var requestBody = pm.request.body.raw;\r",
							"requestBody = JSON.parse(requestBody);\r",
							"\r",
							"var req_name = requestBody.name;\r",
							"var req_surname = requestBody.surname;\r",
							"var req_age = requestBody.age;\r",
							"var req_place = requestBody.place;\r",
							"var req_business = requestBody.business;\r",
							"\r",
							"var res_name = responseBody.name;\r",
							"var res_surname = responseBody.surname;\r",
							"var res_age  = responseBody.age;\r",
							"var res_place = responseBody.place;\r",
							"var res_business = responseBody.business;\r",
							"var res_updatedAt = responseBody.updatedAt;\r",
							"res_updatedAt = res_updatedAt.slice(0,13);\r",
							"\r",
							"\r",
							"pm.test(\"Validate NAME\" , function() {\r",
							"pm.expect(res_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate SURNAME\" , function() {\r",
							"pm.expect(res_surname).to.eql(req_surname);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate AGE\" , function() {\r",
							"pm.expect(res_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate PLACE\" , function() {\r",
							"pm.expect(res_place).to.eql(req_place);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate BUSINESS\" , function() {\r",
							"pm.expect(res_business).to.eql(req_business);\r",
							"});\r",
							"\r",
							"pm.test(\"validate DATE\",function() {\r",
							"pm.expect(res_updatedAt).to.eql(date);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n\"name\": \"Nishant\",\r\n\"surname\" : \"Gupta\",\r\n\"age\" : 28,\r\n\"place\" : \"Jaipur\",\r\n\"Business\" : \"Hardware\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://reqres.in/api/users/2"
			},
			"response": []
		},
		{
			"name": "place_details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\" , function() {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"var date = new Date().toISOString().slice(0,10);\r",
							"\r",
							"var res_Country = responseBody.Country;\r",
							"var res_State = responseBody.State;\r",
							"var res_Capital = responseBody.Capital;\r",
							"var res_Currency = responseBody.Currency;\r",
							"var res_ID = responseBody.ID ; \r",
							"var res_updatedAt = responseBody.updatedAt;\r",
							"res_updatedAt = res_updatedAt.slice(0,10);\r",
							"\r",
							"\r",
							"var requestBody = pm.request.body.raw;\r",
							"requestBody = JSON.parse(requestBody);\r",
							"\r",
							"var req_Country = requestBody.Country;\r",
							"var req_State = requestBody.State;\r",
							"var req_Capital = requestBody.Capital;\r",
							"var req_Currency = requestBody.Currency; \r",
							"\r",
							"\r",
							"pm.test(\"Your Country is valid\" , function () {\r",
							"pm.expect(res_Country).to.eql(req_Country);\r",
							"});\r",
							"\r",
							"pm.test(\"Your State is valid\" , function() {\r",
							"pm.expect(res_State).to.eql(req_State);\r",
							"});\r",
							"\r",
							"pm.test(\"Your Capital is valid\" , function() {\r",
							"pm.expect(res_Capital).to.eql(req_Capital);\r",
							"});\r",
							"\r",
							"pm.test(\"Your Currency is valid\" , function() {\r",
							"pm.expect(res_Currency).to.eql(req_Currency);\r",
							"});\r",
							"\r",
							"pm.test(\"We have generated ID for your request\" , function() {\r",
							"pm.expect(res_ID).to.not.null;\r",
							"pm.expect(res_ID).to.not.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"validate DATE\",function() {\r",
							"pm.expect(res_updatedAt).to.eql(date);    \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*var email = pm.variables.replaceIn(\"{{$randomEmail}}\");\r",
							"pm.collectionVariables.set(\"coll_email\" , email);\r",
							"\r",
							"var password = pm.variables.replaceIn(\"{{$randomPassword}}\");\r",
							"pm.collectionVariables.set(\"coll_password\" , password);\r",
							"\r",
							"var */"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"Country\" : \"India\",\r\n\"State\" : \"Goa\",\r\n\"Capital\" : \"Delhi\",\r\n\"Currency\" : \"INR\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{PATCH_URL}}"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "coll_name",
			"value": ""
		},
		{
			"key": "coll_job",
			"value": ""
		},
		{
			"key": "count_start",
			"value": ""
		},
		{
			"key": "start",
			"value": "",
			"type": "string"
		},
		{
			"key": "end",
			"value": "",
			"type": "string"
		}
	]
}